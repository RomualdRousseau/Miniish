/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module ppu_8 (
    input clk,
    input rst,
    input vga_line_clk,
    input vga_visible,
    input [13:0] vga_address,
    output reg [7:0] vram_addr,
    output reg vram_en,
    output reg [3:0] vram_data,
    output reg [13:0] sprites_addr,
    input [3:0] sprites_data
  );
  
  
  
  localparam WAIT_state = 1'd0;
  localparam BUFFERIZE_state = 1'd1;
  
  reg M_state_d, M_state_q = WAIT_state;
  reg [6:0] M_current_d, M_current_q = 1'h0;
  
  always @* begin
    M_state_d = M_state_q;
    M_current_d = M_current_q;
    
    vram_en = 1'h0;
    vram_data = 1'h0;
    if (!vga_visible) begin
      sprites_addr = {1'h0, M_current_q};
      vram_addr = {1'h0, M_current_q};
    end else begin
      sprites_addr = {vga_address[0+6-:7] + 1'h1, M_current_q};
      vram_addr = {~vga_address[6+0-:1], M_current_q};
    end
    
    case (M_state_q)
      WAIT_state: begin
        if (vga_line_clk) begin
          M_current_d = 1'h0;
          M_state_d = BUFFERIZE_state;
        end
      end
      BUFFERIZE_state: begin
        vram_en = 1'h1;
        vram_data = sprites_data;
        M_current_d = M_current_q + 1'h1;
        if (M_current_q == 7'h7f) begin
          M_state_d = WAIT_state;
        end
      end
    endcase
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_current_q <= 1'h0;
      M_state_q <= 1'h0;
    end else begin
      M_current_q <= M_current_d;
      M_state_q <= M_state_d;
    end
  end
  
endmodule
